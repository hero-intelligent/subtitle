name: Build file_combine

on:
  workflow_dispatch:  # 允许手动触发该工作流

permissions:
  contents: write  # 默认只读权限，如果需要推送代码等需要写权限
  issues: write   # 如果工作流涉及到 issues 的创建或修改
  pull-requests: write  # 如果涉及 PR 创建或更新
  actions: write  # 如果工作流需要创建或更新 actions 的状态

jobs:
  build:
    runs-on: ${{ matrix.os }}  # 使用矩阵，支持多个操作系统
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # 定义要使用的操作系统

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile file_combine.py  # 替换为你的 Python 脚本名

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-executable-${{ matrix.os }}
          path: dist/file_combine${{ matrix.os == 'windows-latest' && '.exe' || '' }}  # 根据操作系统选择扩展名

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate version
        id: version
        run: |
          VERSION=$(date +'%Y-%m-%d')-${{ github.sha }}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create-release
        uses: comnoco/create-release-action@v2
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: "Release notes for version ${{ env.VERSION }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload executables to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dist/file_combine.exe
          asset_name: file_combine-windows.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload executables to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dist/file_combine
          asset_name: file_combine
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
